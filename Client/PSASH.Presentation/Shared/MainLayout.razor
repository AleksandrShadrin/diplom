@using PSASH.Core.Entities;
@using PSASH.Core.ValueObjects;
@using PSASH.Infrastructure.Services.FileBased;
@using PSASH.Presentation.Components;
@using PSASH.Presentation.Models;
@inherits LayoutComponentBase

@inject NotificationService NotificationService
@inject DialogService DialogService
@inject IFileBasedMonoDatasetService filebasedMonoDatasetService
@inject NavigationManager navManger
@inject AppStateService AppStateService

<PageTitle>PSASH.Presentation</PageTitle>
<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />

<RadzenLayout Style="overflow:scroll;">
    <RadzenHeader>
        <RadzenStack AlignItems="AlignItems.Center" Orientation="Orientation.Horizontal">
            <RadzenSidebarToggle Click="@(() => expandSidebar = !expandSidebar)" />
            <RadzenLink Text="Главная" Icon="home" Path="/" @onclick="() => selected = default" />
            <RadzenLink Text="Модели" Icon="build" Path="/inspect-models" @onclick="() => selected = default" />
            <ServerStatus class="ms-auto me-4" />
        </RadzenStack>
        
    </RadzenHeader>
    <RadzenSidebar class="h-100 text-center" @bind-Expanded="expandSidebar">
        <TimeSeriesList @bind-TimeSeries="timeSeries" 
            @bind-Selected="selected" @bind-Selected:after="GoToTimeSeriesPage"
            OnDatasetChanged="OnDatasetChanged">
        </TimeSeriesList>
    </RadzenSidebar>
    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</RadzenLayout>


@code {
    private bool expandSidebar = true;

    private TimeSeriesDto selected = default;

    private List<TimeSeriesDto> timeSeries = new();

    private Task GoToTimeSeriesPage()
    {
        navManger.NavigateTo($"./timeseries/{selected.Name.ToRouteString()}");

        return Task.CompletedTask;
    }

    private Task OnDatasetChanged(Dataset dataset)
    {
        AppStateService.SetDataset(dataset);
        return Task.CompletedTask;
    }
}