# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import LearningService_pb2 as LearningService__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class LearningServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLearningModelsNames = channel.unary_unary(
                '/learning.LearningService/GetLearningModelsNames',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=LearningService__pb2.LearningModelNames.FromString,
                )
        self.GetDatasetNames = channel.unary_unary(
                '/learning.LearningService/GetDatasetNames',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=LearningService__pb2.DatasetNames.FromString,
                )
        self.GetTrainedModels = channel.unary_unary(
                '/learning.LearningService/GetTrainedModels',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=LearningService__pb2.TrainedModels.FromString,
                )
        self.TrainModel = channel.unary_unary(
                '/learning.LearningService/TrainModel',
                request_serializer=LearningService__pb2.Model.SerializeToString,
                response_deserializer=LearningService__pb2.TrainResponse.FromString,
                )


class LearningServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetLearningModelsNames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDatasetNames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrainedModels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrainModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LearningServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLearningModelsNames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLearningModelsNames,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=LearningService__pb2.LearningModelNames.SerializeToString,
            ),
            'GetDatasetNames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDatasetNames,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=LearningService__pb2.DatasetNames.SerializeToString,
            ),
            'GetTrainedModels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrainedModels,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=LearningService__pb2.TrainedModels.SerializeToString,
            ),
            'TrainModel': grpc.unary_unary_rpc_method_handler(
                    servicer.TrainModel,
                    request_deserializer=LearningService__pb2.Model.FromString,
                    response_serializer=LearningService__pb2.TrainResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'learning.LearningService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LearningService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetLearningModelsNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/learning.LearningService/GetLearningModelsNames',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            LearningService__pb2.LearningModelNames.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDatasetNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/learning.LearningService/GetDatasetNames',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            LearningService__pb2.DatasetNames.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTrainedModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/learning.LearningService/GetTrainedModels',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            LearningService__pb2.TrainedModels.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrainModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/learning.LearningService/TrainModel',
            LearningService__pb2.Model.SerializeToString,
            LearningService__pb2.TrainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
